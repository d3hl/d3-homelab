---
- name: Ensure ACL package exists for switching to unprivileged user
  ansible.builtin.package:
    name: acl
    state: present
  become: true

- name: Check if Komodo user exists
  ansible.builtin.command: id -u {{ komodo_user }}
  register: komodo_user_check
  failed_when: false
  changed_when: false

- name: Set komodo_user_exists fact
  ansible.builtin.set_fact:
    komodo_user_exists: "{{ komodo_user_check.rc == 0 }}"

- name: Check for API credentials if using server management
  when: (enable_server_management | bool) and not (
          (komodo_core_url is defined and ((komodo_core_url | string | trim) | length > 0))
      and (komodo_core_api_key is defined and ((komodo_core_api_key | string | trim) | length > 0))
      and (komodo_core_api_secret is defined and ((komodo_core_api_secret | string | trim) | length > 0))
    )
  ansible.builtin.fail:
    msg: >
      Server management was enabled, but missing API credentials.
      Make sure to provide a valid `komodo_core_url`, `komodo_core_api_key`,
      and `komodo_core_api_secret`

- name: Check for unsupported configuration
  when: (not (enable_server_management | bool)) and (
          (server_passkey is defined) and ((server_passkey | string | trim) | length > 0)
    )
  ansible.builtin.fail:
    msg: >
      Setting a server passkey when `enable_server_management=false`.
      This is not a supported configuration, either enable server management,
      or explicitly add your server_passkey to the `komodo_passkeys` list.

- name: Resolve komodo_version
  when: komodo_action in ["install","update"]
  block:
    - name: Handle automatic versioning with core
      when: komodo_version | lower == "core"
      block:
        - name: Check for API credentials
          when: not (
                  (komodo_core_url is defined and ((komodo_core_url | string | trim) | length > 0))
              and (komodo_core_api_key is defined and ((komodo_core_api_key | string | trim) | length > 0))
              and (komodo_core_api_secret is defined and ((komodo_core_api_secret | string | trim) | length > 0))
            )
          ansible.builtin.fail:
            msg: >
              Automatic versioning with "core" was requested, but missing API credentials.
              Make sure to provide a valid `komodo_core_url`, `komodo_core_api_key`,
              and `komodo_core_api_secret`

        - name: Query Core API to get Komodo version
          ansible.builtin.uri:
            url: "{{ komodo_core_url | trim('/') }}/read"
            method: POST
            body_format: json
            headers:
              Content-Type: application/json
              X-Api-Key: "{{ komodo_core_api_key }}"
              X-Api-Secret: "{{ komodo_core_api_secret }}"
            body:
              type: GetVersion
              params: {}
            status_code: 200
            return_content: true
            timeout: 15
          register: _core_version

        - name: Set komodo_version to Komodo Core response
          ansible.builtin.set_fact:
            _komodo_version: "v{{ (_core_version.json.version | regex_replace('^v', '')) }}"
          changed_when: false

    - name: Handle automatic versioning to latest
      when: komodo_version | lower == "latest"
      block:
        - name: Query GitHub for the latest Komodo release
          ansible.builtin.uri:
            url: "https://api.github.com/repos/moghtech/komodo/releases/latest"
            headers:
              Accept: application/vnd.github+json
            return_content: true
            status_code: 200
            timeout: 15
          register: _gh_release

        - name: Set komodo_version to latest GitHub tag
          ansible.builtin.set_fact:
            _komodo_version: "{{ _gh_release.json.tag_name | regex_replace('^v', 'v') }}"
          changed_when: false

    - name: Determine Komodo version
      when: _komodo_version is not defined
      ansible.builtin.set_fact:
        _komodo_version: "{{ komodo_version }}"

    - name: Display Komodo version
      ansible.builtin.debug:
        msg: "Using Komodo version: {{ _komodo_version }}"

- name: Select Komodo binary
  when: komodo_action in ["install","update"]
  ansible.builtin.set_fact:
    binary_name: >-
      {%- if komodo_bin | length > 0 -%}
        {{ komodo_bin }}
      {%- elif ansible_architecture == 'aarch64' -%}
        {{ komodo_bin_aarch64 }}
      {%- else -%} {# x86_64 #}{%- if (_komodo_version | regex_replace('^v', '')) is version('1.16.12', '>=') -%}
          {{ komodo_bin_x86 }}
      {%- else -%}
          {{ komodo_bin_x86_legacy }}
      {%- endif -%} {%- endif -%}

- name: Normalise Komodo passkeys
  when: komodo_action in ["install","update"]
  block:
    - name: Create allowed_passkeys
      ansible.builtin.set_fact:
        allowed_passkeys: >-
          {{
            (
              ([komodo_passkeys] | default([], true) | flatten)
              + ([passkey] if (passkey is defined and (((passkey | default('', true) | trim) | length) > 0)) else [])
            ) | unique
          }}
    - name: Generate a random passkey
      when:
        - enable_server_management | bool
        - generate_server_passkey | bool
        - server_passkey is not defined or ((server_passkey | string | trim) | length == 0)
      ansible.builtin.set_fact:
        server_passkey: >-
          {{
            lookup('password',
            '/dev/null length=32 chars=ascii_letters,digits')
          }}
    - name: Update allowed_passkeys with server_passkey
      ansible.builtin.set_fact:
        allowed_passkeys: >-
          {{
            (
              ([allowed_passkeys] | flatten)
              + ([server_passkey] if server_passkey else [])
            ) | unique
          }}

- name: Include install tasks
  ansible.builtin.import_tasks: install.yml
  when: komodo_action == "install"

- name: Include update tasks
  ansible.builtin.import_tasks: update.yml
  when: komodo_action == "update"

- name: Komodo server update tasks
  ansible.builtin.import_tasks: manage_server.yml
  when: komodo_action in ["install","update"]

- name: Include uninstall tasks
  ansible.builtin.import_tasks: uninstall.yml
  when: komodo_action == "uninstall"

- name: Deprecation warning for passkey variable
  ansible.builtin.debug:
    msg: >
      [DEPRECATION WARNING] variable `passkey` (string) is deprecated.
      Please switch to `komodo_passkeys` (list). This run converted
      it for you, but this may be removed in a future release.
  when: passkey is defined and (((passkey | default('', true) | trim) | length) > 0)
